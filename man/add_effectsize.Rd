% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_effectsize.R
\name{add_effectsize}
\alias{add_effectsize}
\title{Creates a effecttree object based on the original tree with additional effect size information}
\usage{
add_effectsize(
  object,
  purification,
  p.adj,
  threshold = c(0.21, 0.31),
  reverse_splits = FALSE,
  direction = c("topdown", "bottomup"),
  evalcrit = "A"
)
}
\arguments{
\item{object}{An object of type modelparty}

\item{purification}{A character indicating the type of purification ("none", "iterative")}

\item{p.adj}{A character indicating the correction method for multiple testing. Options are "none", "bonferroni" and "fdr"}

\item{threshold}{The threshold of partial gamma above which items should be labeled as DIF/DSF items, default is .21 and .31}

\item{reverse_splits}{A logical indicating whether split should be reversed when the effect size of all items is negligible; default is FALSE}

\item{direction}{A character either "topdown" or "bottomup" indicating whether stopping (topdown) or pruning (bottomup) should be performed}

\item{evalcrit}{A character or character vector indicating the evalution criterion. The default is "A", for which all nodes are pruned in which all items are categorized as "A"
############# FIXME ############ add correction for multiple testing}
}
\value{
An object of type modelparty with 'info' extended by a list named effectsize containing entries effect size, classification, purification type, and purificationCounter
}
\description{
Creates a effecttree object based on the original tree with additional effect size information
}
\examples{
\dontrun{
## raschtree
data("DIFSim", package = "psychotree")
RT <- raschtree(resp ~ age + gender + motivation, data = DIFSim)
## add effect size and plot tree
RT_MH <- add_effectsize(RT, purification = "iterative")
RT_MH$info$effectsize
plot(RT_MH, color_by_node = 1)

## use stopping (topdown) based on the effect size (all items in category "A" or "B")
## and plot tree (here no stopping happens)
RT_stopped <- add_effectsize(RT, purification = "iterative",
                             reverse_splits = TRUE, direction = "topdown", evalcrit = c("A"))
RT_stopped$info$effectsize
plot(RT_stopped, color_by_node = 2)

## example polytomous items:
data("iarm::desc2")
desc2$items <- as.matrix(desc2[,grep("DESC", names(desc2))])
pc_tree <- pctree(items ~ group + gender + agegroup, data = desc2)
pc_tree_pgamma <- add_effectsize(pc_tree, purification = "iterative", p.adj = "fdr")
plot(pc_tree_pgamma, color_by_node = 1)
plot(pc_tree_pgamma, color_by_node = 2)
plot(pc_tree_pgamma, type = "regions", color_by_node = 1)
plot(pc_tree_pgamma, type = "regions", color_by_node = 2)

## example polytomous items, with split-reversal:
data("dat_organization")
items <- as.data.frame(dat_organization[, grep("item", names(dat_organization))])
dat_organization$items <- apply(items,2,as.numeric)
pc_tree <- pctree(items ~ sex + age + length_service + same_position + leadership,
                  data = dat_organization)
plot(pc_tree)
pc_tree_pgamma <- add_effectsize(pc_tree, purification = "iterative", p.adj = "fdr",
                   reverse_splits = TRUE, direction = "topdown")
plot(pc_tree_pgamma, color_by_node = 1)
plot(pc_tree_pgamma, type = "regions", color_by_node = 1)
}
}
